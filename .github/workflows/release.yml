name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Verify tag is on main branch
        run: |
          if ! git branch -r --contains ${{ github.ref }} | grep -q 'origin/main'; then
            echo "Error: Tag must be on main branch"
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v -race ./...

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: notes
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          PREV_TAG=$(git describe --tags --abbrev=0 ${VERSION}^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            echo "NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "Initial release of chikit" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "Production-grade Chi middleware library for distributed systems." >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "Changes since ${PREV_TAG}:" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log ${PREV_TAG}..HEAD --pretty=format:"- %s" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: ${{ steps.version.outputs.VERSION }}
          body: ${{ steps.notes.outputs.NOTES }}
          draft: false
          prerelease: false
